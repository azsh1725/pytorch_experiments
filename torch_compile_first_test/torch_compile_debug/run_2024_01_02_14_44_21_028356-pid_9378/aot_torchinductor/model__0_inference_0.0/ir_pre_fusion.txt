buf0: SchedulerNode(ComputedBuffer)
buf0.writes = [MemoryDep(name='buf0', index=c0, size=(10000,))]
buf0.unmet_dependencies = []
buf0.met_dependencies = 
    [   MemoryDep(name='arg0_1', index=c0, size=(10000,)),
        MemoryDep(name='arg1_1', index=c0, size=(10000,))]
buf0.group.device = cuda:0
buf0.group.iteration = (10000, 1)
buf0.sizes = ([10000], [])
class buf0_loop_body:
    var_ranges = {z0: 10000}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('arg0_1', get_index)
        sin = ops.sin(load)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('arg1_1', get_index_1)
        sin_1 = ops.sin(load_1)
        add = ops.add(sin, sin_1)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf0', get_index_2, add, None)
        return store


